{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortAlphabetically","ALPABET","sortByLength","LENGTH","reset","showResetButton","this","visibleGoods","goods","sort","goodA","goodB","length","localeCompare","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,mBAAqB,WACnB,EAAKD,SAAU,CACbH,SAAUL,EAASU,WAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAU,CACbH,SAAUL,EAASY,UApBzB,EAwBEC,MAAQ,WACN,EAAKL,SAAU,CACbH,SAAUL,EAASM,KACnBF,YAAY,KA3BlB,4CA+BE,WACE,IAAMU,EACFC,KAAKZ,MAAME,WAAaL,EAASM,MAAQS,KAAKZ,MAAMC,WAElDY,EAnEH,SACLC,EACAZ,EACAD,GAEA,IAAMY,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASY,OACZ,OAAOO,EAAME,OAASD,EAAMC,OAE9B,KAAKrB,EAASU,QACZ,OAAOS,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAIThB,GACFY,EAAaT,UAGRS,EA2CgBO,CACnBtB,EAAiBc,KAAKZ,MAAME,SAAUU,KAAKZ,MAAMC,YAGnD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYX,KAAKZ,MAAME,WAAaL,EAASU,UAEjDiB,QAASZ,KAAKN,mBANhB,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYX,KAAKZ,MAAME,WAAaL,EAASY,SAEjDe,QAASZ,KAAKJ,aANhB,4BAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaX,KAAKZ,MAAMC,aAE5BuB,QAASZ,KAAKR,QANhB,qBAWEO,GACA,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKF,MAHhB,sBAUJ,6BACE,6BAEGG,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA5FrB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.347b3be8.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState(({\n      sortType: SortType.ALPABET,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState(({\n      sortType: SortType.NONE,\n      isReversed: false,\n    }));\n  };\n\n  render() {\n    const showResetButton\n      = this.state.sortType !== SortType.NONE || this.state.isReversed;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, this.state.sortType, this.state.isReversed,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPABET },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(showResetButton) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}